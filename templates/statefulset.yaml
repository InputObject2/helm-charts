---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-app
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
  {{- with .Values.app.global.annotations }}
  annotations:
  {{- range $key, $value := . }}
    {{ $key }}: {{ $value }}
  {{- end }}
  {{- end }}
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-http
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-app
    {{- with .Values.app.global.annotations }}
      annotations:
      {{- range $key, $value := . }}
        {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
    spec:
      containers:
        - name: wger
          image: {{ .Values.app.global.image }}
          imagePullPolicy: {{ .Values.app.global.imagePullPolicy }}
          resources:
            requests:
              memory: {{ .Values.app.resources.requests.memory }}
              cpu: {{ .Values.app.resources.requests.cpu }}
            limits:
              memory: {{ .Values.app.resources.limits.memory }}
              cpu: {{ .Values.app.resources.limits.cpu }}
          {{- if .Values.app.persistence.enabled }}
          volumeMounts:
            - name: wger-media
              mountPath: /home/wger/media
              readOnly: false
          {{- end }}
          ports:
            - containerPort: 8080
          env:
            - name: DJANGO_DB_ENGINE
              value: "django.db.backends.postgresql"
            - name: DJANGO_DB_USER
              value: {{ .Values.postgresql.global.postgresql.postgresqlUsername | quote }}
            - name: DJANGO_DB_PASSWORD
              value: {{ .Values.postgresql.global.postgresql.postgresqlPassword | quote }}
            - name: DJANGO_DB_DATABASE
              value: {{ .Values.postgresql.global.postgresql.postgresqlDatabase | quote }}
            - name: DJANGO_DB_HOST
              value: "wger-postgresql"
            - name: DJANGO_DB_PORT
              value: {{ .Values.postgresql.global.postgresql.servicePort | quote }}
            - name: DJANGO_CACHE_BACKEND
              value: "django_redis.cache.RedisCache"
            - name: DJANGO_CACHE_LOCATION
              value: "redis://wger-redis-master:{{ .Values.redis.master.containerPort }}/1"
            - name: DJANGO_CACHE_CLIENT_CLASS
              value: django_redis.client.DefaultClient
            - name: DJANGO_MEDIA_ROOT
              value: /home/wger/media
            {{- if .Values.app.ingress.enabled }}
            - name: SITE_URL
              value: {{ .Values.app.ingress.url }}
            {{- end }}
        {{- with .Values.app.environment }}
          {{- range  . }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
          {{- end }}
        {{- end }}
  {{- if .Values.app.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: wger-media
      {{- with .Values.app.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.app.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.app.persistence.size | quote }}
        storageClassName:  {{ .Values.app.persistence.storageClass | quote }}
  {{- end }}